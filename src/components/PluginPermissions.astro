---
const { plugin } = Astro.props;
import { createMarkdownProcessor } from '@astrojs/markdown-remark';
import { join, dirname } from 'path';
import { fileURLToPath } from 'url';
import { readFile } from 'fs/promises';

const md = await createMarkdownProcessor();
const res = await readFile(
  join(
    dirname(dirname(dirname(fileURLToPath(import.meta.url)))),
    `packages/plugins-workspace/plugins/${plugin}/permissions/autogenerated/reference.md`
  ),
  'utf-8'
);
const content = await md.render(res);
---

<br />

By default all potentially dangerous plugin commands and scopes are blocked and cannot be accessed.
You must modify the permissions in your <code>capabilities</code> configuration to enable these. See
the <a href="/security/capabilities/">Capabilities Overview</a> for more information and the <a
  href="/learn/security/using-plugin-permissions">step by step guide</a
> to use plugin permissions.

<br />
<br />
<slot name="capability" />

<Fragment set:html={content.code} />
